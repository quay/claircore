// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quay/claircore/libindex (interfaces: Libindex)

// Package libindex is a generated GoMock package.
package libindex

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	claircore "github.com/quay/claircore"
	reflect "reflect"
)

// MockLibindex is a mock of Libindex interface
type MockLibindex struct {
	ctrl     *gomock.Controller
	recorder *MockLibindexMockRecorder
}

// MockLibindexMockRecorder is the mock recorder for MockLibindex
type MockLibindexMockRecorder struct {
	mock *MockLibindex
}

// NewMockLibindex creates a new mock instance
func NewMockLibindex(ctrl *gomock.Controller) *MockLibindex {
	mock := &MockLibindex{ctrl: ctrl}
	mock.recorder = &MockLibindexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLibindex) EXPECT() *MockLibindexMockRecorder {
	return m.recorder
}

// Index mocks base method
func (m *MockLibindex) Index(arg0 context.Context, arg1 *claircore.Manifest) (<-chan *claircore.IndexReport, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Index", arg0, arg1)
	ret0, _ := ret[0].(<-chan *claircore.IndexReport)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Index indicates an expected call of Index
func (mr *MockLibindexMockRecorder) Index(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Index", reflect.TypeOf((*MockLibindex)(nil).Index), arg0, arg1)
}

// IndexReport mocks base method
func (m *MockLibindex) IndexReport(arg0 context.Context, arg1 string) (*claircore.IndexReport, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IndexReport", arg0, arg1)
	ret0, _ := ret[0].(*claircore.IndexReport)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// IndexReport indicates an expected call of IndexReport
func (mr *MockLibindexMockRecorder) IndexReport(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IndexReport", reflect.TypeOf((*MockLibindex)(nil).IndexReport), arg0, arg1)
}
