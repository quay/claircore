// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quay/claircore/internal/indexer (interfaces: Coalescer)

// Package indexer is a generated GoMock package.
package indexer

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	claircore "github.com/quay/claircore"
	reflect "reflect"
)

// MockCoalescer is a mock of Coalescer interface
type MockCoalescer struct {
	ctrl     *gomock.Controller
	recorder *MockCoalescerMockRecorder
}

// MockCoalescerMockRecorder is the mock recorder for MockCoalescer
type MockCoalescerMockRecorder struct {
	mock *MockCoalescer
}

// NewMockCoalescer creates a new mock instance
func NewMockCoalescer(ctrl *gomock.Controller) *MockCoalescer {
	mock := &MockCoalescer{ctrl: ctrl}
	mock.recorder = &MockCoalescerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCoalescer) EXPECT() *MockCoalescerMockRecorder {
	return m.recorder
}

// Coalesce mocks base method
func (m *MockCoalescer) Coalesce(arg0 context.Context, arg1 []*LayerArtifacts) (*claircore.IndexReport, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Coalesce", arg0, arg1)
	ret0, _ := ret[0].(*claircore.IndexReport)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Coalesce indicates an expected call of Coalesce
func (mr *MockCoalescerMockRecorder) Coalesce(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Coalesce", reflect.TypeOf((*MockCoalescer)(nil).Coalesce), arg0, arg1)
}
