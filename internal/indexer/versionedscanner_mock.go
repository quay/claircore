// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quay/claircore/internal/indexer (interfaces: VersionedScanner)

// Package indexer is a generated GoMock package.
package indexer

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockVersionedScanner is a mock of VersionedScanner interface
type MockVersionedScanner struct {
	ctrl     *gomock.Controller
	recorder *MockVersionedScannerMockRecorder
}

// MockVersionedScannerMockRecorder is the mock recorder for MockVersionedScanner
type MockVersionedScannerMockRecorder struct {
	mock *MockVersionedScanner
}

// NewMockVersionedScanner creates a new mock instance
func NewMockVersionedScanner(ctrl *gomock.Controller) *MockVersionedScanner {
	mock := &MockVersionedScanner{ctrl: ctrl}
	mock.recorder = &MockVersionedScannerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockVersionedScanner) EXPECT() *MockVersionedScannerMockRecorder {
	return m.recorder
}

// Kind mocks base method
func (m *MockVersionedScanner) Kind() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Kind")
	ret0, _ := ret[0].(string)
	return ret0
}

// Kind indicates an expected call of Kind
func (mr *MockVersionedScannerMockRecorder) Kind() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Kind", reflect.TypeOf((*MockVersionedScanner)(nil).Kind))
}

// Name mocks base method
func (m *MockVersionedScanner) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name
func (mr *MockVersionedScannerMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockVersionedScanner)(nil).Name))
}

// Version mocks base method
func (m *MockVersionedScanner) Version() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Version")
	ret0, _ := ret[0].(string)
	return ret0
}

// Version indicates an expected call of Version
func (mr *MockVersionedScannerMockRecorder) Version() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Version", reflect.TypeOf((*MockVersionedScanner)(nil).Version))
}
