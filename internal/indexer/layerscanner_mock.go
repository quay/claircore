// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quay/claircore/internal/indexer (interfaces: LayerScanner)

// Package indexer is a generated GoMock package.
package indexer

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	claircore "github.com/quay/claircore"
	reflect "reflect"
)

// MockLayerScanner is a mock of LayerScanner interface
type MockLayerScanner struct {
	ctrl     *gomock.Controller
	recorder *MockLayerScannerMockRecorder
}

// MockLayerScannerMockRecorder is the mock recorder for MockLayerScanner
type MockLayerScannerMockRecorder struct {
	mock *MockLayerScanner
}

// NewMockLayerScanner creates a new mock instance
func NewMockLayerScanner(ctrl *gomock.Controller) *MockLayerScanner {
	mock := &MockLayerScanner{ctrl: ctrl}
	mock.recorder = &MockLayerScannerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLayerScanner) EXPECT() *MockLayerScannerMockRecorder {
	return m.recorder
}

// Scan mocks base method
func (m *MockLayerScanner) Scan(arg0 context.Context, arg1 claircore.Digest, arg2 []*claircore.Layer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Scan", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Scan indicates an expected call of Scan
func (mr *MockLayerScannerMockRecorder) Scan(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Scan", reflect.TypeOf((*MockLayerScanner)(nil).Scan), arg0, arg1, arg2)
}
