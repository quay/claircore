// Code generated by ortgen. DO NOT EDIT.

package magika

import "structs"

type ortApiBase struct {
	_ structs.HostLayout

	// const OrtApi*(* GetApi)(uint32_t version);
	GetApi uintptr
	// const char*(* GetVersionString)(void);
	GetVersionString uintptr
}

type ortApi struct {
	_ structs.HostLayout

	// OrtStatus*(* CreateStatus)(OrtErrorCode code, const char* msg) __attribute__((nonnull));
	CreateStatus uintptr
	// OrtErrorCode(* GetErrorCode)( const OrtStatus* status) __attribute__((nonnull));
	GetErrorCode uintptr
	// const char*(* GetErrorMessage)( const OrtStatus* status) __attribute__((nonnull));
	GetErrorMessage uintptr
	// OrtStatusPtr(*CreateEnv)( OrtLoggingLevel log_severity_level, const char* logid, OrtEnv** out) __attribute__((warn_unused_result));
	CreateEnv uintptr
	// OrtStatusPtr(*CreateEnvWithCustomLogger)( OrtLoggingFunction logging_function, void* logger_param, OrtLoggingLevel log_severity_level, const char* logid, OrtEnv** out) __attribute__((warn_unused_result));
	CreateEnvWithCustomLogger uintptr
	// OrtStatusPtr(*EnableTelemetryEvents)( const OrtEnv* env) __attribute__((warn_unused_result));
	EnableTelemetryEvents uintptr
	// OrtStatusPtr(*DisableTelemetryEvents)( const OrtEnv* env) __attribute__((warn_unused_result));
	DisableTelemetryEvents uintptr
	// OrtStatusPtr(*CreateSession)( const OrtEnv* env, const char* model_path, const OrtSessionOptions* options, OrtSession** out) __attribute__((warn_unused_result));
	CreateSession uintptr
	// OrtStatusPtr(*CreateSessionFromArray)( const OrtEnv* env, const void* model_data, size_t model_data_length, const OrtSessionOptions* options, OrtSession** out) __attribute__((warn_unused_result));
	CreateSessionFromArray uintptr
	// OrtStatusPtr(*Run)( OrtSession* session, const OrtRunOptions* run_options, const char* const* input_names, const OrtValue* const* inputs, size_t input_len, const char* const* output_names, size_t output_names_len, OrtValue** outputs) __attribute__((warn_unused_result));
	Run uintptr
	// OrtStatusPtr(*CreateSessionOptions)( OrtSessionOptions** options) __attribute__((warn_unused_result));
	CreateSessionOptions uintptr
	// OrtStatusPtr(*SetOptimizedModelFilePath)( OrtSessionOptions* options, const char* optimized_model_filepath) __attribute__((warn_unused_result));
	SetOptimizedModelFilePath uintptr
	// OrtStatusPtr(*CloneSessionOptions)( const OrtSessionOptions* in_options, OrtSessionOptions** out_options) __attribute__((warn_unused_result));
	CloneSessionOptions uintptr
	// OrtStatusPtr(*SetSessionExecutionMode)( OrtSessionOptions* options, ExecutionMode execution_mode) __attribute__((warn_unused_result));
	SetSessionExecutionMode uintptr
	// OrtStatusPtr(*EnableProfiling)( OrtSessionOptions* options, const char* profile_file_prefix) __attribute__((warn_unused_result));
	EnableProfiling uintptr
	// OrtStatusPtr(*DisableProfiling)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	DisableProfiling uintptr
	// OrtStatusPtr(*EnableMemPattern)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	EnableMemPattern uintptr
	// OrtStatusPtr(*DisableMemPattern)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	DisableMemPattern uintptr
	// OrtStatusPtr(*EnableCpuMemArena)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	EnableCpuMemArena uintptr
	// OrtStatusPtr(*DisableCpuMemArena)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	DisableCpuMemArena uintptr
	// OrtStatusPtr(*SetSessionLogId)( OrtSessionOptions* options, const char* logid) __attribute__((warn_unused_result));
	SetSessionLogId uintptr
	// OrtStatusPtr(*SetSessionLogVerbosityLevel)( OrtSessionOptions* options, int session_log_verbosity_level) __attribute__((warn_unused_result));
	SetSessionLogVerbosityLevel uintptr
	// OrtStatusPtr(*SetSessionLogSeverityLevel)( OrtSessionOptions* options, int session_log_severity_level) __attribute__((warn_unused_result));
	SetSessionLogSeverityLevel uintptr
	// OrtStatusPtr(*SetSessionGraphOptimizationLevel)( OrtSessionOptions* options, GraphOptimizationLevel graph_optimization_level) __attribute__((warn_unused_result));
	SetSessionGraphOptimizationLevel uintptr
	// OrtStatusPtr(*SetIntraOpNumThreads)( OrtSessionOptions* options, int intra_op_num_threads) __attribute__((warn_unused_result));
	SetIntraOpNumThreads uintptr
	// OrtStatusPtr(*SetInterOpNumThreads)( OrtSessionOptions* options, int inter_op_num_threads) __attribute__((warn_unused_result));
	SetInterOpNumThreads uintptr
	// OrtStatusPtr(*CreateCustomOpDomain)( const char* domain, OrtCustomOpDomain** out) __attribute__((warn_unused_result));
	CreateCustomOpDomain uintptr
	// OrtStatusPtr(*CustomOpDomain_Add)( OrtCustomOpDomain* custom_op_domain, const OrtCustomOp* op) __attribute__((warn_unused_result));
	CustomOpDomain_Add uintptr
	// OrtStatusPtr(*AddCustomOpDomain)( OrtSessionOptions* options, OrtCustomOpDomain* custom_op_domain) __attribute__((warn_unused_result));
	AddCustomOpDomain uintptr
	// OrtStatusPtr(*RegisterCustomOpsLibrary)( OrtSessionOptions* options, const char* library_path, void** library_handle) __attribute__((warn_unused_result));
	RegisterCustomOpsLibrary uintptr
	// OrtStatusPtr(*SessionGetInputCount)( const OrtSession* session, size_t* out) __attribute__((warn_unused_result));
	SessionGetInputCount uintptr
	// OrtStatusPtr(*SessionGetOutputCount)( const OrtSession* session, size_t* out) __attribute__((warn_unused_result));
	SessionGetOutputCount uintptr
	// OrtStatusPtr(*SessionGetOverridableInitializerCount)( const OrtSession* session, size_t* out) __attribute__((warn_unused_result));
	SessionGetOverridableInitializerCount uintptr
	// OrtStatusPtr(*SessionGetInputTypeInfo)( const OrtSession* session, size_t index, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	SessionGetInputTypeInfo uintptr
	// OrtStatusPtr(*SessionGetOutputTypeInfo)( const OrtSession* session, size_t index, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	SessionGetOutputTypeInfo uintptr
	// OrtStatusPtr(*SessionGetOverridableInitializerTypeInfo)( const OrtSession* session, size_t index, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	SessionGetOverridableInitializerTypeInfo uintptr
	// OrtStatusPtr(*SessionGetInputName)( const OrtSession* session, size_t index, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	SessionGetInputName uintptr
	// OrtStatusPtr(*SessionGetOutputName)( const OrtSession* session, size_t index, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	SessionGetOutputName uintptr
	// OrtStatusPtr(*SessionGetOverridableInitializerName)( const OrtSession* session, size_t index, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	SessionGetOverridableInitializerName uintptr
	// OrtStatusPtr(*CreateRunOptions)( OrtRunOptions** out) __attribute__((warn_unused_result));
	CreateRunOptions uintptr
	// OrtStatusPtr(*RunOptionsSetRunLogVerbosityLevel)( OrtRunOptions* options, int log_verbosity_level) __attribute__((warn_unused_result));
	RunOptionsSetRunLogVerbosityLevel uintptr
	// OrtStatusPtr(*RunOptionsSetRunLogSeverityLevel)( OrtRunOptions* options, int log_severity_level) __attribute__((warn_unused_result));
	RunOptionsSetRunLogSeverityLevel uintptr
	// OrtStatusPtr(*RunOptionsSetRunTag)( OrtRunOptions* options, const char* run_tag) __attribute__((warn_unused_result));
	RunOptionsSetRunTag uintptr
	// OrtStatusPtr(*RunOptionsGetRunLogVerbosityLevel)( const OrtRunOptions* options, int* log_verbosity_level) __attribute__((warn_unused_result));
	RunOptionsGetRunLogVerbosityLevel uintptr
	// OrtStatusPtr(*RunOptionsGetRunLogSeverityLevel)( const OrtRunOptions* options, int* log_severity_level) __attribute__((warn_unused_result));
	RunOptionsGetRunLogSeverityLevel uintptr
	// OrtStatusPtr(*RunOptionsGetRunTag)( const OrtRunOptions* options, const char** run_tag) __attribute__((warn_unused_result));
	RunOptionsGetRunTag uintptr
	// OrtStatusPtr(*RunOptionsSetTerminate)( OrtRunOptions* options) __attribute__((warn_unused_result));
	RunOptionsSetTerminate uintptr
	// OrtStatusPtr(*RunOptionsUnsetTerminate)( OrtRunOptions* options) __attribute__((warn_unused_result));
	RunOptionsUnsetTerminate uintptr
	// OrtStatusPtr(*CreateTensorAsOrtValue)( OrtAllocator* allocator, const int64_t* shape, size_t shape_len, ONNXTensorElementDataType type, OrtValue** out) __attribute__((warn_unused_result));
	CreateTensorAsOrtValue uintptr
	// OrtStatusPtr(*CreateTensorWithDataAsOrtValue)( const OrtMemoryInfo* info, void* p_data, size_t p_data_len, const int64_t* shape, size_t shape_len, ONNXTensorElementDataType type, OrtValue** out) __attribute__((warn_unused_result));
	CreateTensorWithDataAsOrtValue uintptr
	// OrtStatusPtr(*IsTensor)( const OrtValue* value, int* out) __attribute__((warn_unused_result));
	IsTensor uintptr
	// OrtStatusPtr(*GetTensorMutableData)( OrtValue* value, void** out) __attribute__((warn_unused_result));
	GetTensorMutableData uintptr
	// OrtStatusPtr(*FillStringTensor)( OrtValue* value, const char* const* s, size_t s_len) __attribute__((warn_unused_result));
	FillStringTensor uintptr
	// OrtStatusPtr(*GetStringTensorDataLength)( const OrtValue* value, size_t* len) __attribute__((warn_unused_result));
	GetStringTensorDataLength uintptr
	// OrtStatusPtr(*GetStringTensorContent)( const OrtValue* value, void* s, size_t s_len, size_t* offsets, size_t offsets_len) __attribute__((warn_unused_result));
	GetStringTensorContent uintptr
	// OrtStatusPtr(*CastTypeInfoToTensorInfo)( const OrtTypeInfo* type_info, const OrtTensorTypeAndShapeInfo** out) __attribute__((warn_unused_result));
	CastTypeInfoToTensorInfo uintptr
	// OrtStatusPtr(*GetOnnxTypeFromTypeInfo)( const OrtTypeInfo* type_info, enum ONNXType* out) __attribute__((warn_unused_result));
	GetOnnxTypeFromTypeInfo uintptr
	// OrtStatusPtr(*CreateTensorTypeAndShapeInfo)( OrtTensorTypeAndShapeInfo** out) __attribute__((warn_unused_result));
	CreateTensorTypeAndShapeInfo uintptr
	// OrtStatusPtr(*SetTensorElementType)( OrtTensorTypeAndShapeInfo* info, enum ONNXTensorElementDataType type) __attribute__((warn_unused_result));
	SetTensorElementType uintptr
	// OrtStatusPtr(*SetDimensions)( OrtTensorTypeAndShapeInfo* info, const int64_t* dim_values, size_t dim_count) __attribute__((warn_unused_result));
	SetDimensions uintptr
	// OrtStatusPtr(*GetTensorElementType)( const OrtTensorTypeAndShapeInfo* info, enum ONNXTensorElementDataType* out) __attribute__((warn_unused_result));
	GetTensorElementType uintptr
	// OrtStatusPtr(*GetDimensionsCount)( const OrtTensorTypeAndShapeInfo* info, size_t* out) __attribute__((warn_unused_result));
	GetDimensionsCount uintptr
	// OrtStatusPtr(*GetDimensions)( const OrtTensorTypeAndShapeInfo* info, int64_t* dim_values, size_t dim_values_length) __attribute__((warn_unused_result));
	GetDimensions uintptr
	// OrtStatusPtr(*GetSymbolicDimensions)( const OrtTensorTypeAndShapeInfo* info, const char* dim_params[], size_t dim_params_length) __attribute__((warn_unused_result));
	GetSymbolicDimensions uintptr
	// OrtStatusPtr(*GetTensorShapeElementCount)( const OrtTensorTypeAndShapeInfo* info, size_t* out) __attribute__((warn_unused_result));
	GetTensorShapeElementCount uintptr
	// OrtStatusPtr(*GetTensorTypeAndShape)( const OrtValue* value, OrtTensorTypeAndShapeInfo** out) __attribute__((warn_unused_result));
	GetTensorTypeAndShape uintptr
	// OrtStatusPtr(*GetTypeInfo)( const OrtValue* value, OrtTypeInfo** out) __attribute__((warn_unused_result));
	GetTypeInfo uintptr
	// OrtStatusPtr(*GetValueType)( const OrtValue* value, enum ONNXType* out) __attribute__((warn_unused_result));
	GetValueType uintptr
	// OrtStatusPtr(*CreateMemoryInfo)( const char* name, enum OrtAllocatorType type, int id, enum OrtMemType mem_type, OrtMemoryInfo** out) __attribute__((warn_unused_result));
	CreateMemoryInfo uintptr
	// OrtStatusPtr(*CreateCpuMemoryInfo)( enum OrtAllocatorType type, enum OrtMemType mem_type, OrtMemoryInfo** out) __attribute__((warn_unused_result));
	CreateCpuMemoryInfo uintptr
	// OrtStatusPtr(*CompareMemoryInfo)( const OrtMemoryInfo* info1, const OrtMemoryInfo* info2, int* out) __attribute__((warn_unused_result));
	CompareMemoryInfo uintptr
	// OrtStatusPtr(*MemoryInfoGetName)( const OrtMemoryInfo* ptr, const char** out) __attribute__((warn_unused_result));
	MemoryInfoGetName uintptr
	// OrtStatusPtr(*MemoryInfoGetId)( const OrtMemoryInfo* ptr, int* out) __attribute__((warn_unused_result));
	MemoryInfoGetId uintptr
	// OrtStatusPtr(*MemoryInfoGetMemType)( const OrtMemoryInfo* ptr, OrtMemType* out) __attribute__((warn_unused_result));
	MemoryInfoGetMemType uintptr
	// OrtStatusPtr(*MemoryInfoGetType)( const OrtMemoryInfo* ptr, OrtAllocatorType* out) __attribute__((warn_unused_result));
	MemoryInfoGetType uintptr
	// OrtStatusPtr(*AllocatorAlloc)( OrtAllocator* ort_allocator, size_t size, void** out) __attribute__((warn_unused_result));
	AllocatorAlloc uintptr
	// OrtStatusPtr(*AllocatorFree)( OrtAllocator* ort_allocator, void* p) __attribute__((warn_unused_result));
	AllocatorFree uintptr
	// OrtStatusPtr(*AllocatorGetInfo)( const OrtAllocator* ort_allocator, const struct OrtMemoryInfo** out) __attribute__((warn_unused_result));
	AllocatorGetInfo uintptr
	// OrtStatusPtr(*GetAllocatorWithDefaultOptions)( OrtAllocator** out) __attribute__((warn_unused_result));
	GetAllocatorWithDefaultOptions uintptr
	// OrtStatusPtr(*AddFreeDimensionOverride)( OrtSessionOptions* options, const char* dim_denotation, int64_t dim_value) __attribute__((warn_unused_result));
	AddFreeDimensionOverride uintptr
	// OrtStatusPtr(*GetValue)( const OrtValue* value, int index, OrtAllocator* allocator, OrtValue** out) __attribute__((warn_unused_result));
	GetValue uintptr
	// OrtStatusPtr(*GetValueCount)( const OrtValue* value, size_t* out) __attribute__((warn_unused_result));
	GetValueCount uintptr
	// OrtStatusPtr(*CreateValue)( const OrtValue* const* in, size_t num_values, enum ONNXType value_type, OrtValue** out) __attribute__((warn_unused_result));
	CreateValue uintptr
	// OrtStatusPtr(*CreateOpaqueValue)( const char* domain_name, const char* type_name, const void* data_container, size_t data_container_size, OrtValue** out) __attribute__((warn_unused_result));
	CreateOpaqueValue uintptr
	// OrtStatusPtr(*GetOpaqueValue)( const char* domain_name, const char* type_name, const OrtValue* in, void* data_container, size_t data_container_size) __attribute__((warn_unused_result));
	GetOpaqueValue uintptr
	// OrtStatusPtr(*KernelInfoGetAttribute_float)( const OrtKernelInfo* info, const char* name, float* out) __attribute__((warn_unused_result));
	KernelInfoGetAttribute_float uintptr
	// OrtStatusPtr(*KernelInfoGetAttribute_int64)( const OrtKernelInfo* info, const char* name, int64_t* out) __attribute__((warn_unused_result));
	KernelInfoGetAttribute_int64 uintptr
	// OrtStatusPtr(*KernelInfoGetAttribute_string)( const OrtKernelInfo* info, const char* name, char* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfoGetAttribute_string uintptr
	// OrtStatusPtr(*KernelContext_GetInputCount)( const OrtKernelContext* context, size_t* out) __attribute__((warn_unused_result));
	KernelContext_GetInputCount uintptr
	// OrtStatusPtr(*KernelContext_GetOutputCount)( const OrtKernelContext* context, size_t* out) __attribute__((warn_unused_result));
	KernelContext_GetOutputCount uintptr
	// OrtStatusPtr(*KernelContext_GetInput)( const OrtKernelContext* context, size_t index, const OrtValue** out) __attribute__((warn_unused_result));
	KernelContext_GetInput uintptr
	// OrtStatusPtr(*KernelContext_GetOutput)( OrtKernelContext* context, size_t index, const int64_t* dim_values, size_t dim_count, OrtValue** out) __attribute__((warn_unused_result));
	KernelContext_GetOutput uintptr
	// void( *ReleaseEnv)(OrtEnv * input);
	ReleaseEnv uintptr
	// void( *ReleaseStatus)(OrtStatus * input);
	ReleaseStatus uintptr
	// void( *ReleaseMemoryInfo)(OrtMemoryInfo * input);
	ReleaseMemoryInfo uintptr
	// void( *ReleaseSession)(OrtSession * input);
	ReleaseSession uintptr
	// void( *ReleaseValue)(OrtValue * input);
	ReleaseValue uintptr
	// void( *ReleaseRunOptions)(OrtRunOptions * input);
	ReleaseRunOptions uintptr
	// void( *ReleaseTypeInfo)(OrtTypeInfo * input);
	ReleaseTypeInfo uintptr
	// void( *ReleaseTensorTypeAndShapeInfo)(OrtTensorTypeAndShapeInfo * input);
	ReleaseTensorTypeAndShapeInfo uintptr
	// void( *ReleaseSessionOptions)(OrtSessionOptions * input);
	ReleaseSessionOptions uintptr
	// void( *ReleaseCustomOpDomain)(OrtCustomOpDomain * input);
	ReleaseCustomOpDomain uintptr
	// OrtStatusPtr(*GetDenotationFromTypeInfo)( const OrtTypeInfo* type_info, const char** const denotation, size_t* len) __attribute__((warn_unused_result));
	GetDenotationFromTypeInfo uintptr
	// OrtStatusPtr(*CastTypeInfoToMapTypeInfo)( const OrtTypeInfo* type_info, const OrtMapTypeInfo** out) __attribute__((warn_unused_result));
	CastTypeInfoToMapTypeInfo uintptr
	// OrtStatusPtr(*CastTypeInfoToSequenceTypeInfo)( const OrtTypeInfo* type_info, const OrtSequenceTypeInfo** out) __attribute__((warn_unused_result));
	CastTypeInfoToSequenceTypeInfo uintptr
	// OrtStatusPtr(*GetMapKeyType)( const OrtMapTypeInfo* map_type_info, enum ONNXTensorElementDataType* out) __attribute__((warn_unused_result));
	GetMapKeyType uintptr
	// OrtStatusPtr(*GetMapValueType)( const OrtMapTypeInfo* map_type_info, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	GetMapValueType uintptr
	// OrtStatusPtr(*GetSequenceElementType)( const OrtSequenceTypeInfo* sequence_type_info, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	GetSequenceElementType uintptr
	// void( *ReleaseMapTypeInfo)(OrtMapTypeInfo * input);
	ReleaseMapTypeInfo uintptr
	// void( *ReleaseSequenceTypeInfo)(OrtSequenceTypeInfo * input);
	ReleaseSequenceTypeInfo uintptr
	// OrtStatusPtr(*SessionEndProfiling)( OrtSession* session, OrtAllocator* allocator, char** out) __attribute__((warn_unused_result));
	SessionEndProfiling uintptr
	// OrtStatusPtr(*SessionGetModelMetadata)( const OrtSession* session, OrtModelMetadata** out) __attribute__((warn_unused_result));
	SessionGetModelMetadata uintptr
	// OrtStatusPtr(*ModelMetadataGetProducerName)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	ModelMetadataGetProducerName uintptr
	// OrtStatusPtr(*ModelMetadataGetGraphName)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	ModelMetadataGetGraphName uintptr
	// OrtStatusPtr(*ModelMetadataGetDomain)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	ModelMetadataGetDomain uintptr
	// OrtStatusPtr(*ModelMetadataGetDescription)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	ModelMetadataGetDescription uintptr
	// OrtStatusPtr(*ModelMetadataLookupCustomMetadataMap)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, const char* key, char** value) __attribute__((warn_unused_result));
	ModelMetadataLookupCustomMetadataMap uintptr
	// OrtStatusPtr(*ModelMetadataGetVersion)( const OrtModelMetadata* model_metadata, int64_t* value) __attribute__((warn_unused_result));
	ModelMetadataGetVersion uintptr
	// void( *ReleaseModelMetadata)(OrtModelMetadata * input);
	ReleaseModelMetadata uintptr
	// OrtStatusPtr(*CreateEnvWithGlobalThreadPools)( OrtLoggingLevel log_severity_level, const char* logid, const OrtThreadingOptions* tp_options, OrtEnv** out) __attribute__((warn_unused_result));
	CreateEnvWithGlobalThreadPools uintptr
	// OrtStatusPtr(*DisablePerSessionThreads)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	DisablePerSessionThreads uintptr
	// OrtStatusPtr(*CreateThreadingOptions)( OrtThreadingOptions** out) __attribute__((warn_unused_result));
	CreateThreadingOptions uintptr
	// void( *ReleaseThreadingOptions)(OrtThreadingOptions * input);
	ReleaseThreadingOptions uintptr
	// OrtStatusPtr(*ModelMetadataGetCustomMetadataMapKeys)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char*** keys, int64_t* num_keys) __attribute__((warn_unused_result));
	ModelMetadataGetCustomMetadataMapKeys uintptr
	// OrtStatusPtr(*AddFreeDimensionOverrideByName)( OrtSessionOptions* options, const char* dim_name, int64_t dim_value) __attribute__((warn_unused_result));
	AddFreeDimensionOverrideByName uintptr
	// OrtStatusPtr(*GetAvailableProviders)( char*** out_ptr, int* provider_length) __attribute__((warn_unused_result));
	GetAvailableProviders uintptr
	// OrtStatusPtr(*ReleaseAvailableProviders)( char** ptr, int providers_length) __attribute__((warn_unused_result));
	ReleaseAvailableProviders uintptr
	// OrtStatusPtr(*GetStringTensorElementLength)( const OrtValue* value, size_t index, size_t* out) __attribute__((warn_unused_result));
	GetStringTensorElementLength uintptr
	// OrtStatusPtr(*GetStringTensorElement)( const OrtValue* value, size_t s_len, size_t index, void* s) __attribute__((warn_unused_result));
	GetStringTensorElement uintptr
	// OrtStatusPtr(*FillStringTensorElement)( OrtValue* value, const char* s, size_t index) __attribute__((warn_unused_result));
	FillStringTensorElement uintptr
	// OrtStatusPtr(*AddSessionConfigEntry)( OrtSessionOptions* options, const char* config_key, const char* config_value) __attribute__((warn_unused_result));
	AddSessionConfigEntry uintptr
	// OrtStatusPtr(*CreateAllocator)( const OrtSession* session, const OrtMemoryInfo* mem_info, OrtAllocator** out) __attribute__((warn_unused_result));
	CreateAllocator uintptr
	// void( *ReleaseAllocator)(OrtAllocator * input);
	ReleaseAllocator uintptr
	// OrtStatusPtr(*RunWithBinding)( OrtSession* session, const OrtRunOptions* run_options, const OrtIoBinding* binding_ptr) __attribute__((warn_unused_result));
	RunWithBinding uintptr
	// OrtStatusPtr(*CreateIoBinding)( OrtSession* session, OrtIoBinding** out) __attribute__((warn_unused_result));
	CreateIoBinding uintptr
	// void( *ReleaseIoBinding)(OrtIoBinding * input);
	ReleaseIoBinding uintptr
	// OrtStatusPtr(*BindInput)( OrtIoBinding* binding_ptr, const char* name, const OrtValue* val_ptr) __attribute__((warn_unused_result));
	BindInput uintptr
	// OrtStatusPtr(*BindOutput)( OrtIoBinding* binding_ptr, const char* name, const OrtValue* val_ptr) __attribute__((warn_unused_result));
	BindOutput uintptr
	// OrtStatusPtr(*BindOutputToDevice)( OrtIoBinding* binding_ptr, const char* name, const OrtMemoryInfo* mem_info_ptr) __attribute__((warn_unused_result));
	BindOutputToDevice uintptr
	// OrtStatusPtr(*GetBoundOutputNames)( const OrtIoBinding* binding_ptr, OrtAllocator* allocator, char** buffer, size_t** lengths, size_t* count) __attribute__((warn_unused_result));
	GetBoundOutputNames uintptr
	// OrtStatusPtr(*GetBoundOutputValues)( const OrtIoBinding* binding_ptr, OrtAllocator* allocator, OrtValue*** output, size_t* output_count) __attribute__((warn_unused_result));
	GetBoundOutputValues uintptr
	// void(* ClearBoundInputs)( OrtIoBinding* binding_ptr) __attribute__((nonnull));
	ClearBoundInputs uintptr
	// void(* ClearBoundOutputs)( OrtIoBinding* binding_ptr) __attribute__((nonnull));
	ClearBoundOutputs uintptr
	// OrtStatusPtr(*TensorAt)( OrtValue* value, const int64_t* location_values, size_t location_values_count, void** out) __attribute__((warn_unused_result));
	TensorAt uintptr
	// OrtStatusPtr(*CreateAndRegisterAllocator)( OrtEnv* env, const OrtMemoryInfo* mem_info, const OrtArenaCfg* arena_cfg) __attribute__((warn_unused_result));
	CreateAndRegisterAllocator uintptr
	// OrtStatusPtr(*SetLanguageProjection)( const OrtEnv* ort_env, OrtLanguageProjection projection) __attribute__((warn_unused_result));
	SetLanguageProjection uintptr
	// OrtStatusPtr(*SessionGetProfilingStartTimeNs)( const OrtSession* session, uint64_t* out) __attribute__((warn_unused_result));
	SessionGetProfilingStartTimeNs uintptr
	// OrtStatusPtr(*SetGlobalIntraOpNumThreads)( OrtThreadingOptions* tp_options, int intra_op_num_threads) __attribute__((warn_unused_result));
	SetGlobalIntraOpNumThreads uintptr
	// OrtStatusPtr(*SetGlobalInterOpNumThreads)( OrtThreadingOptions* tp_options, int inter_op_num_threads) __attribute__((warn_unused_result));
	SetGlobalInterOpNumThreads uintptr
	// OrtStatusPtr(*SetGlobalSpinControl)( OrtThreadingOptions* tp_options, int allow_spinning) __attribute__((warn_unused_result));
	SetGlobalSpinControl uintptr
	// OrtStatusPtr(*AddInitializer)( OrtSessionOptions* options, const char* name, const OrtValue* val) __attribute__((warn_unused_result));
	AddInitializer uintptr
	// OrtStatusPtr(*CreateEnvWithCustomLoggerAndGlobalThreadPools)( OrtLoggingFunction logging_function, void* logger_param, OrtLoggingLevel log_severity_level, const char* logid, const struct OrtThreadingOptions* tp_options, OrtEnv** out) __attribute__((warn_unused_result));
	CreateEnvWithCustomLoggerAndGlobalThreadPools uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_CUDA)( OrtSessionOptions* options, const OrtCUDAProviderOptions* cuda_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_CUDA uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_ROCM)( OrtSessionOptions* options, const OrtROCMProviderOptions* rocm_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_ROCM uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_OpenVINO)( OrtSessionOptions* options, const OrtOpenVINOProviderOptions* provider_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_OpenVINO uintptr
	// OrtStatusPtr(*SetGlobalDenormalAsZero)( OrtThreadingOptions* tp_options) __attribute__((warn_unused_result));
	SetGlobalDenormalAsZero uintptr
	// OrtStatusPtr(*CreateArenaCfg)( size_t max_mem, int arena_extend_strategy, int initial_chunk_size_bytes, int max_dead_bytes_per_chunk, OrtArenaCfg** out) __attribute__((warn_unused_result));
	CreateArenaCfg uintptr
	// void( *ReleaseArenaCfg)(OrtArenaCfg * input);
	ReleaseArenaCfg uintptr
	// OrtStatusPtr(*ModelMetadataGetGraphDescription)( const OrtModelMetadata* model_metadata, OrtAllocator* allocator, char** value) __attribute__((warn_unused_result));
	ModelMetadataGetGraphDescription uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_TensorRT)( OrtSessionOptions* options, const OrtTensorRTProviderOptions* tensorrt_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_TensorRT uintptr
	// OrtStatusPtr(*SetCurrentGpuDeviceId)( int device_id) __attribute__((warn_unused_result));
	SetCurrentGpuDeviceId uintptr
	// OrtStatusPtr(*GetCurrentGpuDeviceId)( int* device_id) __attribute__((warn_unused_result));
	GetCurrentGpuDeviceId uintptr
	// OrtStatusPtr(*KernelInfoGetAttributeArray_float)( const OrtKernelInfo* info, const char* name, float* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfoGetAttributeArray_float uintptr
	// OrtStatusPtr(*KernelInfoGetAttributeArray_int64)( const OrtKernelInfo* info, const char* name, int64_t* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfoGetAttributeArray_int64 uintptr
	// OrtStatusPtr(*CreateArenaCfgV2)( const char* const* arena_config_keys, const size_t* arena_config_values, size_t num_keys, OrtArenaCfg** out) __attribute__((warn_unused_result));
	CreateArenaCfgV2 uintptr
	// OrtStatusPtr(*AddRunConfigEntry)( OrtRunOptions* options, const char* config_key, const char* config_value) __attribute__((warn_unused_result));
	AddRunConfigEntry uintptr
	// OrtStatusPtr(*CreatePrepackedWeightsContainer)( OrtPrepackedWeightsContainer** out) __attribute__((warn_unused_result));
	CreatePrepackedWeightsContainer uintptr
	// void( *ReleasePrepackedWeightsContainer)(OrtPrepackedWeightsContainer * input);
	ReleasePrepackedWeightsContainer uintptr
	// OrtStatusPtr(*CreateSessionWithPrepackedWeightsContainer)( const OrtEnv* env, const char* model_path, const OrtSessionOptions* options, OrtPrepackedWeightsContainer* prepacked_weights_container, OrtSession** out) __attribute__((warn_unused_result));
	CreateSessionWithPrepackedWeightsContainer uintptr
	// OrtStatusPtr(*CreateSessionFromArrayWithPrepackedWeightsContainer)( const OrtEnv* env, const void* model_data, size_t model_data_length, const OrtSessionOptions* options, OrtPrepackedWeightsContainer* prepacked_weights_container, OrtSession** out) __attribute__((warn_unused_result));
	CreateSessionFromArrayWithPrepackedWeightsContainer uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_TensorRT_V2)( OrtSessionOptions* options, const OrtTensorRTProviderOptionsV2* tensorrt_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_TensorRT_V2 uintptr
	// OrtStatusPtr(*CreateTensorRTProviderOptions)( OrtTensorRTProviderOptionsV2** out) __attribute__((warn_unused_result));
	CreateTensorRTProviderOptions uintptr
	// OrtStatusPtr(*UpdateTensorRTProviderOptions)( OrtTensorRTProviderOptionsV2* tensorrt_options, const char* const* provider_options_keys, const char* const* provider_options_values, size_t num_keys) __attribute__((warn_unused_result));
	UpdateTensorRTProviderOptions uintptr
	// OrtStatusPtr(*GetTensorRTProviderOptionsAsString)( const OrtTensorRTProviderOptionsV2* tensorrt_options, OrtAllocator* allocator, char** ptr) __attribute__((warn_unused_result));
	GetTensorRTProviderOptionsAsString uintptr
	// void(* ReleaseTensorRTProviderOptions)( OrtTensorRTProviderOptionsV2* input);
	ReleaseTensorRTProviderOptions uintptr
	// OrtStatusPtr(*EnableOrtCustomOps)( OrtSessionOptions* options) __attribute__((warn_unused_result));
	EnableOrtCustomOps uintptr
	// OrtStatusPtr(*RegisterAllocator)( OrtEnv* env, OrtAllocator* allocator) __attribute__((warn_unused_result));
	RegisterAllocator uintptr
	// OrtStatusPtr(*UnregisterAllocator)( OrtEnv* env, const OrtMemoryInfo* mem_info) __attribute__((warn_unused_result));
	UnregisterAllocator uintptr
	// OrtStatusPtr(*IsSparseTensor)( const OrtValue* value, int* out) __attribute__((warn_unused_result));
	IsSparseTensor uintptr
	// OrtStatusPtr(*CreateSparseTensorAsOrtValue)( OrtAllocator* allocator, const int64_t* dense_shape, size_t dense_shape_len, ONNXTensorElementDataType type, OrtValue** out) __attribute__((warn_unused_result));
	CreateSparseTensorAsOrtValue uintptr
	// OrtStatusPtr(*FillSparseTensorCoo)( OrtValue* ort_value, const OrtMemoryInfo* data_mem_info, const int64_t* values_shape, size_t values_shape_len, const void* values, const int64_t* indices_data, size_t indices_num) __attribute__((warn_unused_result));
	FillSparseTensorCoo uintptr
	// OrtStatusPtr(*FillSparseTensorCsr)( OrtValue* ort_value, const OrtMemoryInfo* data_mem_info, const int64_t* values_shape, size_t values_shape_len, const void* values, const int64_t* inner_indices_data, size_t inner_indices_num, const int64_t* outer_indices_data, size_t outer_indices_num) __attribute__((warn_unused_result));
	FillSparseTensorCsr uintptr
	// OrtStatusPtr(*FillSparseTensorBlockSparse)( OrtValue* ort_value, const OrtMemoryInfo* data_mem_info, const int64_t* values_shape, size_t values_shape_len, const void* values, const int64_t* indices_shape_data, size_t indices_shape_len, const int32_t* indices_data) __attribute__((warn_unused_result));
	FillSparseTensorBlockSparse uintptr
	// OrtStatusPtr(*CreateSparseTensorWithValuesAsOrtValue)( const OrtMemoryInfo* info, void* p_data, const int64_t* dense_shape, size_t dense_shape_len, const int64_t* values_shape, size_t values_shape_len, ONNXTensorElementDataType type, OrtValue** out) __attribute__((warn_unused_result));
	CreateSparseTensorWithValuesAsOrtValue uintptr
	// OrtStatusPtr(*UseCooIndices)( OrtValue* ort_value, int64_t* indices_data, size_t indices_num) __attribute__((warn_unused_result));
	UseCooIndices uintptr
	// OrtStatusPtr(*UseCsrIndices)( OrtValue* ort_value, int64_t* inner_data, size_t inner_num, int64_t* outer_data, size_t outer_num) __attribute__((warn_unused_result));
	UseCsrIndices uintptr
	// OrtStatusPtr(*UseBlockSparseIndices)( OrtValue* ort_value, const int64_t* indices_shape, size_t indices_shape_len, int32_t* indices_data) __attribute__((warn_unused_result));
	UseBlockSparseIndices uintptr
	// OrtStatusPtr(*GetSparseTensorFormat)( const OrtValue* ort_value, enum OrtSparseFormat* out) __attribute__((warn_unused_result));
	GetSparseTensorFormat uintptr
	// OrtStatusPtr(*GetSparseTensorValuesTypeAndShape)( const OrtValue* ort_value, OrtTensorTypeAndShapeInfo** out) __attribute__((warn_unused_result));
	GetSparseTensorValuesTypeAndShape uintptr
	// OrtStatusPtr(*GetSparseTensorValues)( const OrtValue* ort_value, const void** out) __attribute__((warn_unused_result));
	GetSparseTensorValues uintptr
	// OrtStatusPtr(*GetSparseTensorIndicesTypeShape)( const OrtValue* ort_value, enum OrtSparseIndicesFormat indices_format, OrtTensorTypeAndShapeInfo** out) __attribute__((warn_unused_result));
	GetSparseTensorIndicesTypeShape uintptr
	// OrtStatusPtr(*GetSparseTensorIndices)( const OrtValue* ort_value, enum OrtSparseIndicesFormat indices_format, size_t* num_indices, const void** indices) __attribute__((warn_unused_result));
	GetSparseTensorIndices uintptr
	// OrtStatusPtr(*HasValue)( const OrtValue* value, int* out) __attribute__((warn_unused_result));
	HasValue uintptr
	// OrtStatusPtr(*KernelContext_GetGPUComputeStream)( const OrtKernelContext* context, void** out) __attribute__((warn_unused_result));
	KernelContext_GetGPUComputeStream uintptr
	// OrtStatusPtr(*GetTensorMemoryInfo)( const OrtValue* value, const OrtMemoryInfo** mem_info) __attribute__((warn_unused_result));
	GetTensorMemoryInfo uintptr
	// OrtStatusPtr(*GetExecutionProviderApi)( const char* provider_name, uint32_t version, const void** provider_api) __attribute__((warn_unused_result));
	GetExecutionProviderApi uintptr
	// OrtStatusPtr(*SessionOptionsSetCustomCreateThreadFn)( OrtSessionOptions* options, OrtCustomCreateThreadFn ort_custom_create_thread_fn) __attribute__((warn_unused_result));
	SessionOptionsSetCustomCreateThreadFn uintptr
	// OrtStatusPtr(*SessionOptionsSetCustomThreadCreationOptions)( OrtSessionOptions* options, void* ort_custom_thread_creation_options) __attribute__((warn_unused_result));
	SessionOptionsSetCustomThreadCreationOptions uintptr
	// OrtStatusPtr(*SessionOptionsSetCustomJoinThreadFn)( OrtSessionOptions* options, OrtCustomJoinThreadFn ort_custom_join_thread_fn) __attribute__((warn_unused_result));
	SessionOptionsSetCustomJoinThreadFn uintptr
	// OrtStatusPtr(*SetGlobalCustomCreateThreadFn)( OrtThreadingOptions* tp_options, OrtCustomCreateThreadFn ort_custom_create_thread_fn) __attribute__((warn_unused_result));
	SetGlobalCustomCreateThreadFn uintptr
	// OrtStatusPtr(*SetGlobalCustomThreadCreationOptions)( OrtThreadingOptions* tp_options, void* ort_custom_thread_creation_options) __attribute__((warn_unused_result));
	SetGlobalCustomThreadCreationOptions uintptr
	// OrtStatusPtr(*SetGlobalCustomJoinThreadFn)( OrtThreadingOptions* tp_options, OrtCustomJoinThreadFn ort_custom_join_thread_fn) __attribute__((warn_unused_result));
	SetGlobalCustomJoinThreadFn uintptr
	// OrtStatusPtr(*SynchronizeBoundInputs)( OrtIoBinding* binding_ptr) __attribute__((warn_unused_result));
	SynchronizeBoundInputs uintptr
	// OrtStatusPtr(*SynchronizeBoundOutputs)( OrtIoBinding* binding_ptr) __attribute__((warn_unused_result));
	SynchronizeBoundOutputs uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_CUDA_V2)( OrtSessionOptions* options, const OrtCUDAProviderOptionsV2* cuda_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_CUDA_V2 uintptr
	// OrtStatusPtr(*CreateCUDAProviderOptions)( OrtCUDAProviderOptionsV2** out) __attribute__((warn_unused_result));
	CreateCUDAProviderOptions uintptr
	// OrtStatusPtr(*UpdateCUDAProviderOptions)( OrtCUDAProviderOptionsV2* cuda_options, const char* const* provider_options_keys, const char* const* provider_options_values, size_t num_keys) __attribute__((warn_unused_result));
	UpdateCUDAProviderOptions uintptr
	// OrtStatusPtr(*GetCUDAProviderOptionsAsString)( const OrtCUDAProviderOptionsV2* cuda_options, OrtAllocator* allocator, char** ptr) __attribute__((warn_unused_result));
	GetCUDAProviderOptionsAsString uintptr
	// void(* ReleaseCUDAProviderOptions)( OrtCUDAProviderOptionsV2* input);
	ReleaseCUDAProviderOptions uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_MIGraphX)( OrtSessionOptions* options, const OrtMIGraphXProviderOptions* migraphx_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_MIGraphX uintptr
	// OrtStatusPtr(*AddExternalInitializers)( OrtSessionOptions* options, const char* const* initializer_names, const OrtValue* const* initializers, size_t initializers_num) __attribute__((warn_unused_result));
	AddExternalInitializers uintptr
	// OrtStatusPtr(*CreateOpAttr)( const char* name, const void* data, int len, OrtOpAttrType type, OrtOpAttr** op_attr) __attribute__((warn_unused_result));
	CreateOpAttr uintptr
	// void( *ReleaseOpAttr)(OrtOpAttr * input);
	ReleaseOpAttr uintptr
	// OrtStatusPtr(*CreateOp)( const OrtKernelInfo* info, const char* op_name, const char* domain, int version, const char** type_constraint_names, const ONNXTensorElementDataType* type_constraint_values, int type_constraint_count, const OrtOpAttr* const* attr_values, int attr_count, int input_count, int output_count, OrtOp** ort_op) __attribute__((warn_unused_result));
	CreateOp uintptr
	// OrtStatusPtr(*InvokeOp)( const OrtKernelContext* context, const OrtOp* ort_op, const OrtValue* const* input_values, int input_count, OrtValue* const* output_values, int output_count) __attribute__((warn_unused_result));
	InvokeOp uintptr
	// void( *ReleaseOp)(OrtOp * input);
	ReleaseOp uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider)( OrtSessionOptions* options, const char* provider_name, const char* const* provider_options_keys, const char* const* provider_options_values, size_t num_keys) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider uintptr
	// OrtStatusPtr(*CopyKernelInfo)( const OrtKernelInfo* info, OrtKernelInfo** info_copy) __attribute__((warn_unused_result));
	CopyKernelInfo uintptr
	// void( *ReleaseKernelInfo)(OrtKernelInfo * input);
	ReleaseKernelInfo uintptr
	// const OrtTrainingApi*(* GetTrainingApi)(uint32_t version);
	GetTrainingApi uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_CANN)( OrtSessionOptions* options, const OrtCANNProviderOptions* cann_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_CANN uintptr
	// OrtStatusPtr(*CreateCANNProviderOptions)( OrtCANNProviderOptions** out) __attribute__((warn_unused_result));
	CreateCANNProviderOptions uintptr
	// OrtStatusPtr(*UpdateCANNProviderOptions)( OrtCANNProviderOptions* cann_options, const char* const* provider_options_keys, const char* const* provider_options_values, size_t num_keys) __attribute__((warn_unused_result));
	UpdateCANNProviderOptions uintptr
	// OrtStatusPtr(*GetCANNProviderOptionsAsString)( const OrtCANNProviderOptions* cann_options, OrtAllocator* allocator, char** ptr) __attribute__((warn_unused_result));
	GetCANNProviderOptionsAsString uintptr
	// void(* ReleaseCANNProviderOptions)( OrtCANNProviderOptions* input);
	ReleaseCANNProviderOptions uintptr
	// void(* MemoryInfoGetDeviceType)( const OrtMemoryInfo* ptr, OrtMemoryInfoDeviceType* out);
	MemoryInfoGetDeviceType uintptr
	// OrtStatusPtr(*UpdateEnvWithCustomLogLevel)( OrtEnv* ort_env, OrtLoggingLevel log_severity_level) __attribute__((warn_unused_result));
	UpdateEnvWithCustomLogLevel uintptr
	// OrtStatusPtr(*SetGlobalIntraOpThreadAffinity)( OrtThreadingOptions* tp_options, const char* affinity_string) __attribute__((warn_unused_result));
	SetGlobalIntraOpThreadAffinity uintptr
	// OrtStatusPtr(*RegisterCustomOpsLibrary_V2)( OrtSessionOptions* options, const char* library_name) __attribute__((warn_unused_result));
	RegisterCustomOpsLibrary_V2 uintptr
	// OrtStatusPtr(*RegisterCustomOpsUsingFunction)( OrtSessionOptions* options, const char* registration_func_name) __attribute__((warn_unused_result));
	RegisterCustomOpsUsingFunction uintptr
	// OrtStatusPtr(*KernelInfo_GetInputCount)( const OrtKernelInfo* info, size_t* out) __attribute__((warn_unused_result));
	KernelInfo_GetInputCount uintptr
	// OrtStatusPtr(*KernelInfo_GetOutputCount)( const OrtKernelInfo* info, size_t* out) __attribute__((warn_unused_result));
	KernelInfo_GetOutputCount uintptr
	// OrtStatusPtr(*KernelInfo_GetInputName)( const OrtKernelInfo* info, size_t index, char* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfo_GetInputName uintptr
	// OrtStatusPtr(*KernelInfo_GetOutputName)( const OrtKernelInfo* info, size_t index, char* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfo_GetOutputName uintptr
	// OrtStatusPtr(*KernelInfo_GetInputTypeInfo)( const OrtKernelInfo* info, size_t index, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	KernelInfo_GetInputTypeInfo uintptr
	// OrtStatusPtr(*KernelInfo_GetOutputTypeInfo)( const OrtKernelInfo* info, size_t index, OrtTypeInfo** type_info) __attribute__((warn_unused_result));
	KernelInfo_GetOutputTypeInfo uintptr
	// OrtStatusPtr(*KernelInfoGetAttribute_tensor)( const OrtKernelInfo* info, const char* name, OrtAllocator* allocator, OrtValue** out) __attribute__((warn_unused_result));
	KernelInfoGetAttribute_tensor uintptr
	// OrtStatusPtr(*HasSessionConfigEntry)( const OrtSessionOptions* options, const char* config_key, int* out) __attribute__((warn_unused_result));
	HasSessionConfigEntry uintptr
	// OrtStatusPtr(*GetSessionConfigEntry)( const OrtSessionOptions* options, const char* config_key, char* config_value, size_t* size) __attribute__((warn_unused_result));
	GetSessionConfigEntry uintptr
	// OrtStatusPtr(*SessionOptionsAppendExecutionProvider_Dnnl)( OrtSessionOptions* options, const OrtDnnlProviderOptions* dnnl_options) __attribute__((warn_unused_result));
	SessionOptionsAppendExecutionProvider_Dnnl uintptr
	// OrtStatusPtr(*CreateDnnlProviderOptions)( OrtDnnlProviderOptions** out) __attribute__((warn_unused_result));
	CreateDnnlProviderOptions uintptr
	// OrtStatusPtr(*UpdateDnnlProviderOptions)( OrtDnnlProviderOptions* dnnl_options, const char* const* provider_options_keys, const char* const* provider_options_values, size_t num_keys) __attribute__((warn_unused_result));
	UpdateDnnlProviderOptions uintptr
	// OrtStatusPtr(*GetDnnlProviderOptionsAsString)( const OrtDnnlProviderOptions* dnnl_options, OrtAllocator* allocator, char** ptr) __attribute__((warn_unused_result));
	GetDnnlProviderOptionsAsString uintptr
	// void(* ReleaseDnnlProviderOptions)( OrtDnnlProviderOptions* input);
	ReleaseDnnlProviderOptions uintptr
	// OrtStatusPtr(*KernelInfo_GetNodeName)( const OrtKernelInfo* info, char* out, size_t* size) __attribute__((warn_unused_result));
	KernelInfo_GetNodeName uintptr
	// OrtStatusPtr(*KernelInfo_GetLogger)( const OrtKernelInfo* info, const OrtLogger** logger) __attribute__((warn_unused_result));
	KernelInfo_GetLogger uintptr
	// OrtStatusPtr(*KernelContext_GetLogger)( const OrtKernelContext* context, const OrtLogger** logger) __attribute__((warn_unused_result));
	KernelContext_GetLogger uintptr
	// OrtStatusPtr(*Logger_LogMessage)( const OrtLogger* logger, OrtLoggingLevel log_severity_level, const char* message, const char* file_path, int line_number, const char* func_name) __attribute__((warn_unused_result));
	Logger_LogMessage uintptr
	// OrtStatusPtr(*Logger_GetLoggingSeverityLevel)( const OrtLogger* logger, OrtLoggingLevel* out) __attribute__((warn_unused_result));
	Logger_GetLoggingSeverityLevel uintptr
	// OrtStatusPtr(*KernelInfoGetConstantInput_tensor)( const OrtKernelInfo* info, size_t index, int* is_constant, const OrtValue** out) __attribute__((warn_unused_result));
	KernelInfoGetConstantInput_tensor uintptr
	// OrtStatusPtr(*CastTypeInfoToOptionalTypeInfo)( const OrtTypeInfo* type_info, const OrtOptionalTypeInfo** out) __attribute__((warn_unused_result));
	CastTypeInfoToOptionalTypeInfo uintptr
	// OrtStatusPtr(*GetOptionalContainedTypeInfo)( const OrtOptionalTypeInfo* optional_type_info, OrtTypeInfo** out) __attribute__((warn_unused_result));
	GetOptionalContainedTypeInfo uintptr
	// OrtStatusPtr(*GetResizedStringTensorElementBuffer)( OrtValue* value, size_t index, size_t length_in_bytes, char** buffer) __attribute__((warn_unused_result));
	GetResizedStringTensorElementBuffer uintptr
	// OrtStatusPtr(*KernelContext_GetAllocator)( const OrtKernelContext* context, const OrtMemoryInfo* mem_info, OrtAllocator** out) __attribute__((warn_unused_result));
	KernelContext_GetAllocator uintptr
	// const char*(* GetBuildInfoString)(void);
	GetBuildInfoString uintptr
}
