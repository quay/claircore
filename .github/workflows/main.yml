---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      go_versions: ${{ steps.config.outputs.go_versions }}
    steps:
      - id: config
        run: |
          echo 'go_versions=["1.20","1.19"]' >> $GITHUB_OUTPUT

  commit-check:
    name: Commit Check
    runs-on: ubuntu-latest
    steps:
      - name: commit check
        uses: gsactions/commit-message-checker@v2
        with:
          pattern: |
            ^(.*):\s*(.*)\n.*$
          error: 'Commit must begin with <scope>: <subject>'
          flags: 'gm'
          excludeTitle: true
          excludeDescription: true
          checkAllCommitMessages: true
          accessToken: ${{ secrets.GITHUB_TOKEN }}

  tidy:
    needs: ['config']
    name: Tidy
    runs-on: ubuntu-latest
    container: quay.io/projectquay/golang:${{ fromJSON(needs.config.outputs.go_versions)[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Go Tidy
        run: go mod tidy
      - name: Git Diff
        run: git diff --exit-code

  build-documentation:
    name: Build Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: '0.3.5'
      - name: mdBook Build
        run: mdbook build

  tests:
    needs: ['config']
    name: Tests
    runs-on: ubuntu-latest
    container: quay.io/projectquay/golang:${{ matrix.go }}
    env:
      POSTGRES_CONNECTION_STRING: "host=claircore-db port=5432 user=claircore dbname=claircore sslmode=disable"
    services:
      claircore-db:
        image: postgres:12.1
        env:
          POSTGRES_USER: "claircore"
          POSTGRES_DB: "claircore"
          POSTGRES_INITDB_ARGS: "--no-sync"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        go: ${{ fromJSON(needs.config.outputs.go_versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Go dependencies
        uses: actions/cache@v3.3.1
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go${{ matrix.go }}-
      - name: Cache misc testdata
        uses: actions/cache@v3.3.1
        with:
          key: testdata-${{ hashFiles('**/*_test.go') }}
          restore-keys: |
            testdata-
          path: |
            **/testdata/*.layer
            **/testdata/*.tar
            **/testdata/*.tar.gz
      - name: Tests
        run: make integration
